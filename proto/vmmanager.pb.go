// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: proto/vmmanager.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ControlEventType int32

const (
	ControlEventType_CONTROL_EVENT_UNKNOWN   ControlEventType = 0
	ControlEventType_CONTROL_EVENT_CREATE_VM ControlEventType = 1
	ControlEventType_CONTROL_EVENT_DELETE_VM ControlEventType = 2
	ControlEventType_CONTROL_EVENT_START_VM  ControlEventType = 3
	ControlEventType_CONTROL_EVENT_STOP_VM   ControlEventType = 4
	ControlEventType_CONTROL_EXECUTE_QMP_CMD ControlEventType = 5
	ControlEventType_CONTROL_GET_VM_STATUS   ControlEventType = 6
)

// Enum value maps for ControlEventType.
var (
	ControlEventType_name = map[int32]string{
		0: "CONTROL_EVENT_UNKNOWN",
		1: "CONTROL_EVENT_CREATE_VM",
		2: "CONTROL_EVENT_DELETE_VM",
		3: "CONTROL_EVENT_START_VM",
		4: "CONTROL_EVENT_STOP_VM",
		5: "CONTROL_EXECUTE_QMP_CMD",
		6: "CONTROL_GET_VM_STATUS",
	}
	ControlEventType_value = map[string]int32{
		"CONTROL_EVENT_UNKNOWN":   0,
		"CONTROL_EVENT_CREATE_VM": 1,
		"CONTROL_EVENT_DELETE_VM": 2,
		"CONTROL_EVENT_START_VM":  3,
		"CONTROL_EVENT_STOP_VM":   4,
		"CONTROL_EXECUTE_QMP_CMD": 5,
		"CONTROL_GET_VM_STATUS":   6,
	}
)

func (x ControlEventType) Enum() *ControlEventType {
	p := new(ControlEventType)
	*p = x
	return p
}

func (x ControlEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ControlEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_vmmanager_proto_enumTypes[0].Descriptor()
}

func (ControlEventType) Type() protoreflect.EnumType {
	return &file_proto_vmmanager_proto_enumTypes[0]
}

func (x ControlEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ControlEventType.Descriptor instead.
func (ControlEventType) EnumDescriptor() ([]byte, []int) {
	return file_proto_vmmanager_proto_rawDescGZIP(), []int{0}
}

type VMRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	VmId           string                 `protobuf:"bytes,1,opt,name=vm_id,json=vmId,proto3" json:"vm_id,omitempty"`
	ControlEvent   ControlEventType       `protobuf:"varint,2,opt,name=control_event,json=controlEvent,proto3,enum=proto.ControlEventType" json:"control_event,omitempty"`
	ControlContext *structpb.Struct       `protobuf:"bytes,3,opt,name=control_context,json=controlContext,proto3" json:"control_context,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *VMRequest) Reset() {
	*x = VMRequest{}
	mi := &file_proto_vmmanager_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMRequest) ProtoMessage() {}

func (x *VMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vmmanager_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMRequest.ProtoReflect.Descriptor instead.
func (*VMRequest) Descriptor() ([]byte, []int) {
	return file_proto_vmmanager_proto_rawDescGZIP(), []int{0}
}

func (x *VMRequest) GetVmId() string {
	if x != nil {
		return x.VmId
	}
	return ""
}

func (x *VMRequest) GetControlEvent() ControlEventType {
	if x != nil {
		return x.ControlEvent
	}
	return ControlEventType_CONTROL_EVENT_UNKNOWN
}

func (x *VMRequest) GetControlContext() *structpb.Struct {
	if x != nil {
		return x.ControlContext
	}
	return nil
}

type VMResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Result        *structpb.Struct       `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"` // Optional additional info
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VMResponse) Reset() {
	*x = VMResponse{}
	mi := &file_proto_vmmanager_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMResponse) ProtoMessage() {}

func (x *VMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vmmanager_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMResponse.ProtoReflect.Descriptor instead.
func (*VMResponse) Descriptor() ([]byte, []int) {
	return file_proto_vmmanager_proto_rawDescGZIP(), []int{1}
}

func (x *VMResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *VMResponse) GetResult() *structpb.Struct {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_proto_vmmanager_proto protoreflect.FileDescriptor

const file_proto_vmmanager_proto_rawDesc = "" +
	"\n" +
	"\x15proto/vmmanager.proto\x12\x05proto\x1a\x1cgoogle/protobuf/struct.proto\"\xa0\x01\n" +
	"\tVMRequest\x12\x13\n" +
	"\x05vm_id\x18\x01 \x01(\tR\x04vmId\x12<\n" +
	"\rcontrol_event\x18\x02 \x01(\x0e2\x17.proto.ControlEventTypeR\fcontrolEvent\x12@\n" +
	"\x0fcontrol_context\x18\x03 \x01(\v2\x17.google.protobuf.StructR\x0econtrolContext\"W\n" +
	"\n" +
	"VMResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12/\n" +
	"\x06result\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x06result*\xd6\x01\n" +
	"\x10ControlEventType\x12\x19\n" +
	"\x15CONTROL_EVENT_UNKNOWN\x10\x00\x12\x1b\n" +
	"\x17CONTROL_EVENT_CREATE_VM\x10\x01\x12\x1b\n" +
	"\x17CONTROL_EVENT_DELETE_VM\x10\x02\x12\x1a\n" +
	"\x16CONTROL_EVENT_START_VM\x10\x03\x12\x19\n" +
	"\x15CONTROL_EVENT_STOP_VM\x10\x04\x12\x1b\n" +
	"\x17CONTROL_EXECUTE_QMP_CMD\x10\x05\x12\x19\n" +
	"\x15CONTROL_GET_VM_STATUS\x10\x062G\n" +
	"\tVMManager\x12:\n" +
	"\x13HandleControlEvents\x12\x10.proto.VMRequest\x1a\x11.proto.VMResponseB\x17Z\x15vmmanager/proto;protob\x06proto3"

var (
	file_proto_vmmanager_proto_rawDescOnce sync.Once
	file_proto_vmmanager_proto_rawDescData []byte
)

func file_proto_vmmanager_proto_rawDescGZIP() []byte {
	file_proto_vmmanager_proto_rawDescOnce.Do(func() {
		file_proto_vmmanager_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_vmmanager_proto_rawDesc), len(file_proto_vmmanager_proto_rawDesc)))
	})
	return file_proto_vmmanager_proto_rawDescData
}

var file_proto_vmmanager_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_vmmanager_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_vmmanager_proto_goTypes = []any{
	(ControlEventType)(0),   // 0: proto.ControlEventType
	(*VMRequest)(nil),       // 1: proto.VMRequest
	(*VMResponse)(nil),      // 2: proto.VMResponse
	(*structpb.Struct)(nil), // 3: google.protobuf.Struct
}
var file_proto_vmmanager_proto_depIdxs = []int32{
	0, // 0: proto.VMRequest.control_event:type_name -> proto.ControlEventType
	3, // 1: proto.VMRequest.control_context:type_name -> google.protobuf.Struct
	3, // 2: proto.VMResponse.result:type_name -> google.protobuf.Struct
	1, // 3: proto.VMManager.HandleControlEvents:input_type -> proto.VMRequest
	2, // 4: proto.VMManager.HandleControlEvents:output_type -> proto.VMResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_vmmanager_proto_init() }
func file_proto_vmmanager_proto_init() {
	if File_proto_vmmanager_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_vmmanager_proto_rawDesc), len(file_proto_vmmanager_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_vmmanager_proto_goTypes,
		DependencyIndexes: file_proto_vmmanager_proto_depIdxs,
		EnumInfos:         file_proto_vmmanager_proto_enumTypes,
		MessageInfos:      file_proto_vmmanager_proto_msgTypes,
	}.Build()
	File_proto_vmmanager_proto = out.File
	file_proto_vmmanager_proto_goTypes = nil
	file_proto_vmmanager_proto_depIdxs = nil
}
