// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: grpcapi/vmmanager.proto

package grpcapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Existing messages
type VMRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VmId          string                 `protobuf:"bytes,1,opt,name=vm_id,json=vmId,proto3" json:"vm_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VMRequest) Reset() {
	*x = VMRequest{}
	mi := &file_grpcapi_vmmanager_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMRequest) ProtoMessage() {}

func (x *VMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpcapi_vmmanager_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMRequest.ProtoReflect.Descriptor instead.
func (*VMRequest) Descriptor() ([]byte, []int) {
	return file_grpcapi_vmmanager_proto_rawDescGZIP(), []int{0}
}

func (x *VMRequest) GetVmId() string {
	if x != nil {
		return x.VmId
	}
	return ""
}

type VMResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VMResponse) Reset() {
	*x = VMResponse{}
	mi := &file_grpcapi_vmmanager_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMResponse) ProtoMessage() {}

func (x *VMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpcapi_vmmanager_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMResponse.ProtoReflect.Descriptor instead.
func (*VMResponse) Descriptor() ([]byte, []int) {
	return file_grpcapi_vmmanager_proto_rawDescGZIP(), []int{1}
}

func (x *VMResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VMResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type VMStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VmId          string                 `protobuf:"bytes,1,opt,name=vm_id,json=vmId,proto3" json:"vm_id,omitempty"`
	State         string                 `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VMStatus) Reset() {
	*x = VMStatus{}
	mi := &file_grpcapi_vmmanager_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMStatus) ProtoMessage() {}

func (x *VMStatus) ProtoReflect() protoreflect.Message {
	mi := &file_grpcapi_vmmanager_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMStatus.ProtoReflect.Descriptor instead.
func (*VMStatus) Descriptor() ([]byte, []int) {
	return file_grpcapi_vmmanager_proto_rawDescGZIP(), []int{2}
}

func (x *VMStatus) GetVmId() string {
	if x != nil {
		return x.VmId
	}
	return ""
}

func (x *VMStatus) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type QMPCommandRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VmId          string                 `protobuf:"bytes,1,opt,name=vm_id,json=vmId,proto3" json:"vm_id,omitempty"`
	Command       map[string]string      `protobuf:"bytes,2,rep,name=command,proto3" json:"command,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // QMP command as a key-value map
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QMPCommandRequest) Reset() {
	*x = QMPCommandRequest{}
	mi := &file_grpcapi_vmmanager_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QMPCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QMPCommandRequest) ProtoMessage() {}

func (x *QMPCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpcapi_vmmanager_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QMPCommandRequest.ProtoReflect.Descriptor instead.
func (*QMPCommandRequest) Descriptor() ([]byte, []int) {
	return file_grpcapi_vmmanager_proto_rawDescGZIP(), []int{3}
}

func (x *QMPCommandRequest) GetVmId() string {
	if x != nil {
		return x.VmId
	}
	return ""
}

func (x *QMPCommandRequest) GetCommand() map[string]string {
	if x != nil {
		return x.Command
	}
	return nil
}

type QMPCommandResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Response      map[string]string      `protobuf:"bytes,3,rep,name=response,proto3" json:"response,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QMPCommandResponse) Reset() {
	*x = QMPCommandResponse{}
	mi := &file_grpcapi_vmmanager_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QMPCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QMPCommandResponse) ProtoMessage() {}

func (x *QMPCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpcapi_vmmanager_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QMPCommandResponse.ProtoReflect.Descriptor instead.
func (*QMPCommandResponse) Descriptor() ([]byte, []int) {
	return file_grpcapi_vmmanager_proto_rawDescGZIP(), []int{4}
}

func (x *QMPCommandResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *QMPCommandResponse) GetResponse() map[string]string {
	if x != nil {
		return x.Response
	}
	return nil
}

var File_grpcapi_vmmanager_proto protoreflect.FileDescriptor

const file_grpcapi_vmmanager_proto_rawDesc = "" +
	"\n" +
	"\x17grpcapi/vmmanager.proto\x12\agrpcapi\" \n" +
	"\tVMRequest\x12\x13\n" +
	"\x05vm_id\x18\x01 \x01(\tR\x04vmId\"@\n" +
	"\n" +
	"VMResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\"5\n" +
	"\bVMStatus\x12\x13\n" +
	"\x05vm_id\x18\x01 \x01(\tR\x04vmId\x12\x14\n" +
	"\x05state\x18\x02 \x01(\tR\x05state\"\xa7\x01\n" +
	"\x11QMPCommandRequest\x12\x13\n" +
	"\x05vm_id\x18\x01 \x01(\tR\x04vmId\x12A\n" +
	"\acommand\x18\x02 \x03(\v2'.grpcapi.QMPCommandRequest.CommandEntryR\acommand\x1a:\n" +
	"\fCommandEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb2\x01\n" +
	"\x12QMPCommandResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12E\n" +
	"\bresponse\x18\x03 \x03(\v2).grpcapi.QMPCommandResponse.ResponseEntryR\bresponse\x1a;\n" +
	"\rResponseEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xa8\x02\n" +
	"\tVMManager\x123\n" +
	"\bCreateVM\x12\x12.grpcapi.VMRequest\x1a\x13.grpcapi.VMResponse\x122\n" +
	"\aStartVM\x12\x12.grpcapi.VMRequest\x1a\x13.grpcapi.VMResponse\x121\n" +
	"\x06StopVM\x12\x12.grpcapi.VMRequest\x1a\x13.grpcapi.VMResponse\x124\n" +
	"\vGetVMStatus\x12\x12.grpcapi.VMRequest\x1a\x11.grpcapi.VMStatus\x12I\n" +
	"\x0eSendQMPCommand\x12\x1a.grpcapi.QMPCommandRequest\x1a\x1b.grpcapi.QMPCommandResponseB\x18Z\x16govbin/grpcapi;grpcapib\x06proto3"

var (
	file_grpcapi_vmmanager_proto_rawDescOnce sync.Once
	file_grpcapi_vmmanager_proto_rawDescData []byte
)

func file_grpcapi_vmmanager_proto_rawDescGZIP() []byte {
	file_grpcapi_vmmanager_proto_rawDescOnce.Do(func() {
		file_grpcapi_vmmanager_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_grpcapi_vmmanager_proto_rawDesc), len(file_grpcapi_vmmanager_proto_rawDesc)))
	})
	return file_grpcapi_vmmanager_proto_rawDescData
}

var file_grpcapi_vmmanager_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_grpcapi_vmmanager_proto_goTypes = []any{
	(*VMRequest)(nil),          // 0: grpcapi.VMRequest
	(*VMResponse)(nil),         // 1: grpcapi.VMResponse
	(*VMStatus)(nil),           // 2: grpcapi.VMStatus
	(*QMPCommandRequest)(nil),  // 3: grpcapi.QMPCommandRequest
	(*QMPCommandResponse)(nil), // 4: grpcapi.QMPCommandResponse
	nil,                        // 5: grpcapi.QMPCommandRequest.CommandEntry
	nil,                        // 6: grpcapi.QMPCommandResponse.ResponseEntry
}
var file_grpcapi_vmmanager_proto_depIdxs = []int32{
	5, // 0: grpcapi.QMPCommandRequest.command:type_name -> grpcapi.QMPCommandRequest.CommandEntry
	6, // 1: grpcapi.QMPCommandResponse.response:type_name -> grpcapi.QMPCommandResponse.ResponseEntry
	0, // 2: grpcapi.VMManager.CreateVM:input_type -> grpcapi.VMRequest
	0, // 3: grpcapi.VMManager.StartVM:input_type -> grpcapi.VMRequest
	0, // 4: grpcapi.VMManager.StopVM:input_type -> grpcapi.VMRequest
	0, // 5: grpcapi.VMManager.GetVMStatus:input_type -> grpcapi.VMRequest
	3, // 6: grpcapi.VMManager.SendQMPCommand:input_type -> grpcapi.QMPCommandRequest
	1, // 7: grpcapi.VMManager.CreateVM:output_type -> grpcapi.VMResponse
	1, // 8: grpcapi.VMManager.StartVM:output_type -> grpcapi.VMResponse
	1, // 9: grpcapi.VMManager.StopVM:output_type -> grpcapi.VMResponse
	2, // 10: grpcapi.VMManager.GetVMStatus:output_type -> grpcapi.VMStatus
	4, // 11: grpcapi.VMManager.SendQMPCommand:output_type -> grpcapi.QMPCommandResponse
	7, // [7:12] is the sub-list for method output_type
	2, // [2:7] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_grpcapi_vmmanager_proto_init() }
func file_grpcapi_vmmanager_proto_init() {
	if File_grpcapi_vmmanager_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_grpcapi_vmmanager_proto_rawDesc), len(file_grpcapi_vmmanager_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpcapi_vmmanager_proto_goTypes,
		DependencyIndexes: file_grpcapi_vmmanager_proto_depIdxs,
		MessageInfos:      file_grpcapi_vmmanager_proto_msgTypes,
	}.Build()
	File_grpcapi_vmmanager_proto = out.File
	file_grpcapi_vmmanager_proto_goTypes = nil
	file_grpcapi_vmmanager_proto_depIdxs = nil
}
